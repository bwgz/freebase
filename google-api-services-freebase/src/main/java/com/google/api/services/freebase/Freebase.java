/*
 * Copyright 2010 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-09-16 16:01:30 UTC)
 * on 2013-10-15 at 04:12:07 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.freebase;

import com.google.api.client.json.GenericJson;

/**
 * Service definition for Freebase (v1).
 *
 * <p>
 * Find Freebase entities using textual queries and other constraints.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/freebase/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link FreebaseRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Freebase extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.17.0-rc of the Freebase Search library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://www.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "freebase/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Freebase(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Freebase(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Reconcile entities to Freebase open data.
   *
   * Create a request for the method "reconcile".
   *
   * This request holds the parameters needed by the freebase server.  After setting any optional
   * parameters, call the {@link Reconcile#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Reconcile reconcile() throws java.io.IOException {
    Reconcile result = new Reconcile();
    initialize(result);
    return result;
  }

  public class Reconcile extends FreebaseRequest<com.google.api.services.freebase.model.ReconcileGet> {

    private static final String REST_PATH = "reconcile";

    /**
     * Reconcile entities to Freebase open data.
     *
     * Create a request for the method "reconcile".
     *
     * This request holds the parameters needed by the the freebase server.  After setting any
     * optional parameters, call the {@link Reconcile#execute()} method to invoke the remote
     * operation. <p> {@link
     * Reconcile#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Reconcile() {
      super(Freebase.this, "GET", REST_PATH, null, com.google.api.services.freebase.model.ReconcileGet.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Reconcile setAlt(java.lang.String alt) {
      return (Reconcile) super.setAlt(alt);
    }

    @Override
    public Reconcile setFields(java.lang.String fields) {
      return (Reconcile) super.setFields(fields);
    }

    @Override
    public Reconcile setKey(java.lang.String key) {
      return (Reconcile) super.setKey(key);
    }

    @Override
    public Reconcile setOauthToken(java.lang.String oauthToken) {
      return (Reconcile) super.setOauthToken(oauthToken);
    }

    @Override
    public Reconcile setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Reconcile) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Reconcile setQuotaUser(java.lang.String quotaUser) {
      return (Reconcile) super.setQuotaUser(quotaUser);
    }

    @Override
    public Reconcile setUserIp(java.lang.String userIp) {
      return (Reconcile) super.setUserIp(userIp);
    }

    /** Languages for names and values. First language is used for display. Default is 'en'. */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> lang;

    /** Languages for names and values. First language is used for display. Default is 'en'.
     */
    public java.util.List<java.lang.String> getLang() {
      return lang;
    }

    /** Languages for names and values. First language is used for display. Default is 'en'. */
    public Reconcile setLang(java.util.List<java.lang.String> lang) {
      this.lang = lang;
      return this;
    }

    /** Required confidence for a candidate to match. Must be between .5 and 1.0 */
    @com.google.api.client.util.Key
    private java.lang.Float confidence;

    /** Required confidence for a candidate to match. Must be between .5 and 1.0 [default: 0.99] [minimum:
   0.0] [maximum: 1.0]
     */
    public java.lang.Float getConfidence() {
      return confidence;
    }

    /** Required confidence for a candidate to match. Must be between .5 and 1.0 */
    public Reconcile setConfidence(java.lang.Float confidence) {
      this.confidence = confidence;
      return this;
    }

    /** Name of entity. */
    @com.google.api.client.util.Key
    private java.lang.String name;

    /** Name of entity.
     */
    public java.lang.String getName() {
      return name;
    }

    /** Name of entity. */
    public Reconcile setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    /** Classifications of entity e.g. type, category, title. */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> kind;

    /** Classifications of entity e.g. type, category, title.
     */
    public java.util.List<java.lang.String> getKind() {
      return kind;
    }

    /** Classifications of entity e.g. type, category, title. */
    public Reconcile setKind(java.util.List<java.lang.String> kind) {
      this.kind = kind;
      return this;
    }

    /**
     * Property values for entity formatted as :
     */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> prop;

    /** Property values for entity formatted as :
     */
    public java.util.List<java.lang.String> getProp() {
      return prop;
    }

    /**
     * Property values for entity formatted as :
     */
    public Reconcile setProp(java.util.List<java.lang.String> prop) {
      this.prop = prop;
      return this;
    }

    /** Maximum number of candidates to return. */
    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /** Maximum number of candidates to return. [default: 3] [minimum: 0] [maximum: 25]
     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    /** Maximum number of candidates to return. */
    public Reconcile setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public Reconcile set(String parameterName, Object value) {
      return (Reconcile) super.set(parameterName, value);
    }
  }

  /**
   * Search Freebase open data.
   *
   * Create a request for the method "search".
   *
   * This request holds the parameters needed by the freebase server.  After setting any optional
   * parameters, call the {@link Search#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Search search() throws java.io.IOException {
    Search result = new Search();
    initialize(result);
    return result;
  }

  public class Search extends FreebaseRequest<GenericJson> {

    private static final String REST_PATH = "search";

    private final java.util.regex.Pattern MID_PATTERN =
        java.util.regex.Pattern.compile("^/[mgtx]/[0-2][0-9bcdfghjklmnpqrstvwxyz_]{1,24}$");

    private final java.util.regex.Pattern FILTER_PATTERN =
        java.util.regex.Pattern.compile("^\\(.*\\)$");

    private final java.util.regex.Pattern CALLBACK_PATTERN =
        java.util.regex.Pattern.compile("([A-Za-z0-9_$.]|\\[|\\])+");

    private final java.util.regex.Pattern OUTPUT_PATTERN =
        java.util.regex.Pattern.compile("^\\(.*\\)$");

    /**
     * Search Freebase open data.
     *
     * Create a request for the method "search".
     *
     * This request holds the parameters needed by the the freebase server.  After setting any
     * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
     * <p> {@link
     * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Search() {
      super(Freebase.this, "GET", REST_PATH, null, GenericJson.class);
      initializeMediaDownload();
    }

    @Override
    public void executeMediaAndDownloadTo(java.io.OutputStream outputStream) throws java.io.IOException {
      super.executeMediaAndDownloadTo(outputStream);
    }

    @Override
    public java.io.InputStream executeMediaAsInputStream() throws java.io.IOException {
      return super.executeMediaAsInputStream();
    }

    @Override
    public com.google.api.client.http.HttpResponse executeMedia() throws java.io.IOException {
      return super.executeMedia();
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Search setAlt(java.lang.String alt) {
      return (Search) super.setAlt(alt);
    }

    @Override
    public Search setFields(java.lang.String fields) {
      return (Search) super.setFields(fields);
    }

    @Override
    public Search setKey(java.lang.String key) {
      return (Search) super.setKey(key);
    }

    @Override
    public Search setOauthToken(java.lang.String oauthToken) {
      return (Search) super.setOauthToken(oauthToken);
    }

    @Override
    public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Search) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Search setQuotaUser(java.lang.String quotaUser) {
      return (Search) super.setQuotaUser(quotaUser);
    }

    @Override
    public Search setUserIp(java.lang.String userIp) {
      return (Search) super.setUserIp(userIp);
    }

    /** Restrict to topics with this Freebase domain id. */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> domain;

    /** Restrict to topics with this Freebase domain id.
     */
    public java.util.List<java.lang.String> getDomain() {
      return domain;
    }

    /** Restrict to topics with this Freebase domain id. */
    public Search setDomain(java.util.List<java.lang.String> domain) {
      this.domain = domain;
      return this;
    }

    /** The keyword to request help on. */
    @com.google.api.client.util.Key
    private java.lang.String help;

    /** The keyword to request help on.
     */
    public java.lang.String getHelp() {
      return help;
    }

    /** The keyword to request help on. */
    public Search setHelp(java.lang.String help) {
      this.help = help;
      return this;
    }

    /** Query term to search for. */
    @com.google.api.client.util.Key
    private java.lang.String query;

    /** Query term to search for.
     */
    public java.lang.String getQuery() {
      return query;
    }

    /** Query term to search for. */
    public Search setQuery(java.lang.String query) {
      this.query = query;
      return this;
    }

    /** Relevance scoring algorithm to use. */
    @com.google.api.client.util.Key
    private java.lang.String scoring;

    /** Relevance scoring algorithm to use. [default: entity]
     */
    public java.lang.String getScoring() {
      return scoring;
    }

    /** Relevance scoring algorithm to use. */
    public Search setScoring(java.lang.String scoring) {
      this.scoring = scoring;
      return this;
    }

    /** The cursor value to use for the next page of results. */
    @com.google.api.client.util.Key
    private java.lang.Integer cursor;

    /** The cursor value to use for the next page of results.
     */
    public java.lang.Integer getCursor() {
      return cursor;
    }

    /** The cursor value to use for the next page of results. */
    public Search setCursor(java.lang.Integer cursor) {
      this.cursor = cursor;
      return this;
    }

    /** Prefix match against names and aliases. */
    @com.google.api.client.util.Key
    private java.lang.Boolean prefixed;

    /** Prefix match against names and aliases.
     */
    public java.lang.Boolean getPrefixed() {
      return prefixed;
    }

    /** Prefix match against names and aliases. */
    public Search setPrefixed(java.lang.Boolean prefixed) {
      this.prefixed = prefixed;
      return this;
    }

    /** Query on exact name and keys only. */
    @com.google.api.client.util.Key
    private java.lang.Boolean exact;

    /** Query on exact name and keys only.
     */
    public java.lang.Boolean getExact() {
      return exact;
    }

    /** Query on exact name and keys only. */
    public Search setExact(java.lang.Boolean exact) {
      this.exact = exact;
      return this;
    }

    /** A mid to use instead of a query. */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> mid;

    /** A mid to use instead of a query.
     */
    public java.util.List<java.lang.String> getMid() {
      return mid;
    }

    /** A mid to use instead of a query. */
    public Search setMid(java.util.List<java.lang.String> mid) {
      if (!getSuppressPatternChecks()) {
        for (String midElem : mid) {
          com.google.api.client.util.Preconditions.checkArgument(MID_PATTERN.matcher(midElem).matches(),
              "Parameter mid elements must conform to the pattern " +
              "^/[mgtx]/[0-2][0-9bcdfghjklmnpqrstvwxyz_]{1,24}$");
        }
      }
      this.mid = mid;
      return this;
    }

    /** The encoding of the response. You can use this parameter to enable html encoding. */
    @com.google.api.client.util.Key
    private java.lang.String encode;

    /** The encoding of the response. You can use this parameter to enable html encoding. [default: off]
     */
    public java.lang.String getEncode() {
      return encode;
    }

    /** The encoding of the response. You can use this parameter to enable html encoding. */
    public Search setEncode(java.lang.String encode) {
      this.encode = encode;
      return this;
    }

    /** Restrict to topics with this Freebase type id. */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> type;

    /** Restrict to topics with this Freebase type id.
     */
    public java.util.List<java.lang.String> getType() {
      return type;
    }

    /** Restrict to topics with this Freebase type id. */
    public Search setType(java.util.List<java.lang.String> type) {
      this.type = type;
      return this;
    }

    /** A mql as_of_time value to use with mql_output queries. */
    @com.google.api.client.util.Key("as_of_time")
    private java.lang.String asOfTime;

    /** A mql as_of_time value to use with mql_output queries.
     */
    public java.lang.String getAsOfTime() {
      return asOfTime;
    }

    /** A mql as_of_time value to use with mql_output queries. */
    public Search setAsOfTime(java.lang.String asOfTime) {
      this.asOfTime = asOfTime;
      return this;
    }

    /** Query on stemmed names and aliases. May not be used with prefixed. */
    @com.google.api.client.util.Key
    private java.lang.Boolean stemmed;

    /** Query on stemmed names and aliases. May not be used with prefixed.
     */
    public java.lang.Boolean getStemmed() {
      return stemmed;
    }

    /** Query on stemmed names and aliases. May not be used with prefixed. */
    public Search setStemmed(java.lang.Boolean stemmed) {
      this.stemmed = stemmed;
      return this;
    }

    /** Structural format of the json response. */
    @com.google.api.client.util.Key
    private java.lang.String format;

    /** Structural format of the json response. [default: entity]
     */
    public java.lang.String getFormat() {
      return format;
    }

    /** Structural format of the json response. */
    public Search setFormat(java.lang.String format) {
      this.format = format;
      return this;
    }

    /** Request 'did you mean' suggestions */
    @com.google.api.client.util.Key
    private java.lang.String spell;

    /** Request 'did you mean' suggestions [default: no_spelling]
     */
    public java.lang.String getSpell() {
      return spell;
    }

    /** Request 'did you mean' suggestions */
    public Search setSpell(java.lang.String spell) {
      this.spell = spell;
      return this;
    }

    /** A rule to match against. */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> with;

    /** A rule to match against.
     */
    public java.util.List<java.lang.String> getWith() {
      return with;
    }

    /** A rule to match against. */
    public Search setWith(java.util.List<java.lang.String> with) {
      this.with = with;
      return this;
    }

    /** The code of the language to run the query with. Default is 'en'. */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> lang;

    /** The code of the language to run the query with. Default is 'en'.
     */
    public java.util.List<java.lang.String> getLang() {
      return lang;
    }

    /** The code of the language to run the query with. Default is 'en'. */
    public Search setLang(java.util.List<java.lang.String> lang) {
      this.lang = lang;
      return this;
    }

    /** Whether to indent the json results or not. */
    @com.google.api.client.util.Key
    private java.lang.Boolean indent;

    /** Whether to indent the json results or not.
     */
    public java.lang.Boolean getIndent() {
      return indent;
    }

    /** Whether to indent the json results or not. */
    public Search setIndent(java.lang.Boolean indent) {
      this.indent = indent;
      return this;
    }

    /** A filter to apply to the query. */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> filter;

    /** A filter to apply to the query.
     */
    public java.util.List<java.lang.String> getFilter() {
      return filter;
    }

    /** A filter to apply to the query. */
    public Search setFilter(java.util.List<java.lang.String> filter) {
      if (!getSuppressPatternChecks()) {
        for (String filterElem : filter) {
          com.google.api.client.util.Preconditions.checkArgument(FILTER_PATTERN.matcher(filterElem).matches(),
              "Parameter filter elements must conform to the pattern " +
              "^\\(.*\\)$");
        }
      }
      this.filter = filter;
      return this;
    }

    /** JS method name for JSONP callbacks. */
    @com.google.api.client.util.Key
    private java.lang.String callback;

    /** JS method name for JSONP callbacks.
     */
    public java.lang.String getCallback() {
      return callback;
    }

    /** JS method name for JSONP callbacks. */
    public Search setCallback(java.lang.String callback) {
      if (!getSuppressPatternChecks()) {
        com.google.api.client.util.Preconditions.checkArgument(CALLBACK_PATTERN.matcher(callback).matches(),
            "Parameter callback must conform to the pattern " +
            "([A-Za-z0-9_$.]|\\[|\\])+");
      }
      this.callback = callback;
      return this;
    }

    /** A rule to not match against. */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> without;

    /** A rule to not match against.
     */
    public java.util.List<java.lang.String> getWithout() {
      return without;
    }

    /** A rule to not match against. */
    public Search setWithout(java.util.List<java.lang.String> without) {
      this.without = without;
      return this;
    }

    /** Maximum number of results to return. */
    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /** Maximum number of results to return. [default: 20]
     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    /** Maximum number of results to return. */
    public Search setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    /** An output expression to request data from matches. */
    @com.google.api.client.util.Key
    private java.lang.String output;

    /** An output expression to request data from matches.
     */
    public java.lang.String getOutput() {
      return output;
    }

    /** An output expression to request data from matches. */
    public Search setOutput(java.lang.String output) {
      if (!getSuppressPatternChecks()) {
        com.google.api.client.util.Preconditions.checkArgument(OUTPUT_PATTERN.matcher(output).matches(),
            "Parameter output must conform to the pattern " +
            "^\\(.*\\)$");
      }
      this.output = output;
      return this;
    }

    /** The MQL query to run againist the results to extract more data. */
    @com.google.api.client.util.Key("mql_output")
    private java.lang.String mqlOutput;

    /** The MQL query to run againist the results to extract more data.
     */
    public java.lang.String getMqlOutput() {
      return mqlOutput;
    }

    /** The MQL query to run againist the results to extract more data. */
    public Search setMqlOutput(java.lang.String mqlOutput) {
      this.mqlOutput = mqlOutput;
      return this;
    }

    @Override
    public Search set(String parameterName, Object value) {
      return (Search) super.set(parameterName, value);
    }
  }

  /**
   * An accessor for creating requests from the Topic collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Freebase freebase = new Freebase(...);}
   *   {@code Freebase.Topic.List request = freebase.topic().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Topic topic() {
    return new Topic();
  }

  /**
   * The "topic" collection of methods.
   */
  public class Topic {

    /**
     * Get properties and meta-data about a topic.
     *
     * Create a request for the method "topic.lookup".
     *
     * This request holds the parameters needed by the freebase server.  After setting any optional
     * parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
     *
     * @param id The id of the item that you want data about.
     * @return the request
     */
    public Lookup lookup(java.util.List<java.lang.String> id) throws java.io.IOException {
      Lookup result = new Lookup(id);
      initialize(result);
      return result;
    }

    public class Lookup extends FreebaseRequest<com.google.api.services.freebase.model.TopicLookup> {

      private static final String REST_PATH = "topic{/id*}";

      /**
       * Get properties and meta-data about a topic.
       *
       * Create a request for the method "topic.lookup".
       *
       * This request holds the parameters needed by the the freebase server.  After setting any
       * optional parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
       * <p> {@link
       * Lookup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id The id of the item that you want data about.
       * @since 1.13
       */
      protected Lookup(java.util.List<java.lang.String> id) {
        super(Freebase.this, "GET", REST_PATH, null, com.google.api.services.freebase.model.TopicLookup.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Lookup setAlt(java.lang.String alt) {
        return (Lookup) super.setAlt(alt);
      }

      @Override
      public Lookup setFields(java.lang.String fields) {
        return (Lookup) super.setFields(fields);
      }

      @Override
      public Lookup setKey(java.lang.String key) {
        return (Lookup) super.setKey(key);
      }

      @Override
      public Lookup setOauthToken(java.lang.String oauthToken) {
        return (Lookup) super.setOauthToken(oauthToken);
      }

      @Override
      public Lookup setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Lookup) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Lookup setQuotaUser(java.lang.String quotaUser) {
        return (Lookup) super.setQuotaUser(quotaUser);
      }

      @Override
      public Lookup setUserIp(java.lang.String userIp) {
        return (Lookup) super.setUserIp(userIp);
      }

      /** The id of the item that you want data about. */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> id;

      /** The id of the item that you want data about.
       */
      public java.util.List<java.lang.String> getId() {
        return id;
      }

      /** The id of the item that you want data about. */
      public Lookup setId(java.util.List<java.lang.String> id) {
        this.id = id;
        return this;
      }

      /** The language you 'd like the content in - a freebase /type/lang language key. */
      @com.google.api.client.util.Key
      private java.lang.String lang;

      /** The language you 'd like the content in - a freebase /type/lang language key. [default: en]
       */
      public java.lang.String getLang() {
        return lang;
      }

      /** The language you 'd like the content in - a freebase /type/lang language key. */
      public Lookup setLang(java.lang.String lang) {
        this.lang = lang;
        return this;
      }

      /** Determines how up-to-date the data returned is. A unix epoch time, a guid or a 'now' */
      @com.google.api.client.util.Key
      private java.lang.String dateline;

      /** Determines how up-to-date the data returned is. A unix epoch time, a guid or a 'now'
       */
      public java.lang.String getDateline() {
        return dateline;
      }

      /** Determines how up-to-date the data returned is. A unix epoch time, a guid or a 'now' */
      public Lookup setDateline(java.lang.String dateline) {
        this.dateline = dateline;
        return this;
      }

      /**
       * A frebase domain, type or property id, 'suggest', 'commons', or 'all'. Filter the results
       * and returns only appropriate properties.
       */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> filter;

      /** A frebase domain, type or property id, 'suggest', 'commons', or 'all'. Filter the results and
     returns only appropriate properties.
       */
      public java.util.List<java.lang.String> getFilter() {
        return filter;
      }

      /**
       * A frebase domain, type or property id, 'suggest', 'commons', or 'all'. Filter the results
       * and returns only appropriate properties.
       */
      public Lookup setFilter(java.util.List<java.lang.String> filter) {
        this.filter = filter;
        return this;
      }

      /** Do not apply any constraints, or get any names. */
      @com.google.api.client.util.Key
      private java.lang.Boolean raw;

      /** Do not apply any constraints, or get any names. [default: false]
       */
      public java.lang.Boolean getRaw() {
        return raw;
      }

      /** Do not apply any constraints, or get any names. */
      public Lookup setRaw(java.lang.Boolean raw) {
        this.raw = raw;
        return this;
      }

      /**
       * Convenience method that returns only {@link Boolean#TRUE} or {@link Boolean#FALSE}.
       *
       * <p>
       * Boolean properties can have four possible values:
       * {@code null}, {@link com.google.api.client.util.Data#NULL_BOOLEAN}, {@link Boolean#TRUE}
       * or {@link Boolean#FALSE}.
       * </p>
       *
       * <p>
       * This method returns {@link Boolean#TRUE} if the default of the property is {@link Boolean#TRUE}
       * and it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
       * {@link Boolean#FALSE} is returned if the default of the property is {@link Boolean#FALSE} and
       * it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
       * </p>
       *
       * <p>
       * Do not apply any constraints, or get any names.
       * </p>
       */
      public boolean isRaw() {
        if (raw == null || raw == com.google.api.client.util.Data.NULL_BOOLEAN) {
          return false;
        }
        return raw;
      }

      /** The maximum number of property values to return for each property. */
      @com.google.api.client.util.Key
      private java.lang.Long limit;

      /** The maximum number of property values to return for each property. [default: 10]
       */
      public java.lang.Long getLimit() {
        return limit;
      }

      /** The maximum number of property values to return for each property. */
      public Lookup setLimit(java.lang.Long limit) {
        this.limit = limit;
        return this;
      }

      @Override
      public Lookup set(String parameterName, Object value) {
        return (Lookup) super.set(parameterName, value);
      }
    }

  }

  /**
   * Returns the scaled/cropped image attached to a freebase node.
   *
   * Create a request for the method "image".
   *
   * This request holds the parameters needed by the freebase server.  After setting any optional
   * parameters, call the {@link Image#execute()} method to invoke the remote operation.
   *
   * @param id Freebase entity or content id, mid, or guid.
   * @return the request
   */
  public Image image(java.util.List<java.lang.String> id) throws java.io.IOException {
    Image result = new Image(id);
    initialize(result);
    return result;
  }

  public class Image extends FreebaseRequest<Void> {

    private static final String REST_PATH = "image{/id*}";

    private final java.util.regex.Pattern FALLBACKID_PATTERN =
        java.util.regex.Pattern.compile("/[^.]*$");

    /**
     * Returns the scaled/cropped image attached to a freebase node.
     *
     * Create a request for the method "image".
     *
     * This request holds the parameters needed by the the freebase server.  After setting any
     * optional parameters, call the {@link Image#execute()} method to invoke the remote operation.
     * <p> {@link
     * Image#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id Freebase entity or content id, mid, or guid.
     * @since 1.13
     */
    protected Image(java.util.List<java.lang.String> id) {
      super(Freebase.this, "GET", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      initializeMediaDownload();
    }

    @Override
    public void executeMediaAndDownloadTo(java.io.OutputStream outputStream) throws java.io.IOException {
      super.executeMediaAndDownloadTo(outputStream);
    }

    @Override
    public java.io.InputStream executeMediaAsInputStream() throws java.io.IOException {
      return super.executeMediaAsInputStream();
    }

    @Override
    public com.google.api.client.http.HttpResponse executeMedia() throws java.io.IOException {
      return super.executeMedia();
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Image setAlt(java.lang.String alt) {
      return (Image) super.setAlt(alt);
    }

    @Override
    public Image setFields(java.lang.String fields) {
      return (Image) super.setFields(fields);
    }

    @Override
    public Image setKey(java.lang.String key) {
      return (Image) super.setKey(key);
    }

    @Override
    public Image setOauthToken(java.lang.String oauthToken) {
      return (Image) super.setOauthToken(oauthToken);
    }

    @Override
    public Image setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Image) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Image setQuotaUser(java.lang.String quotaUser) {
      return (Image) super.setQuotaUser(quotaUser);
    }

    @Override
    public Image setUserIp(java.lang.String userIp) {
      return (Image) super.setUserIp(userIp);
    }

    /** Freebase entity or content id, mid, or guid. */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> id;

    /** Freebase entity or content id, mid, or guid.
     */
    public java.util.List<java.lang.String> getId() {
      return id;
    }

    /** Freebase entity or content id, mid, or guid. */
    public Image setId(java.util.List<java.lang.String> id) {
      this.id = id;
      return this;
    }

    /** Maximum width in pixels for resulting image. */
    @com.google.api.client.util.Key
    private java.lang.Long maxwidth;

    /** Maximum width in pixels for resulting image.

   [maximum: 4096]
     */
    public java.lang.Long getMaxwidth() {
      return maxwidth;
    }

    /** Maximum width in pixels for resulting image. */
    public Image setMaxwidth(java.lang.Long maxwidth) {
      this.maxwidth = maxwidth;
      return this;
    }

    /** Maximum height in pixels for resulting image. */
    @com.google.api.client.util.Key
    private java.lang.Long maxheight;

    /** Maximum height in pixels for resulting image.

   [maximum: 4096]
     */
    public java.lang.Long getMaxheight() {
      return maxheight;
    }

    /** Maximum height in pixels for resulting image. */
    public Image setMaxheight(java.lang.Long maxheight) {
      this.maxheight = maxheight;
      return this;
    }

    /**
     * Use the image associated with this secondary id if no image is associated with the primary
     * id.
     */
    @com.google.api.client.util.Key
    private java.lang.String fallbackid;

    /** Use the image associated with this secondary id if no image is associated with the primary id.
   [default: /freebase/no_image_png]
     */
    public java.lang.String getFallbackid() {
      return fallbackid;
    }

    /**
     * Use the image associated with this secondary id if no image is associated with the primary
     * id.
     */
    public Image setFallbackid(java.lang.String fallbackid) {
      if (!getSuppressPatternChecks()) {
        com.google.api.client.util.Preconditions.checkArgument(FALLBACKID_PATTERN.matcher(fallbackid).matches(),
            "Parameter fallbackid must conform to the pattern " +
            "/[^.]*$");
      }
      this.fallbackid = fallbackid;
      return this;
    }

    /**
     * A boolean specifying whether the resulting image should be padded up to the requested
     * dimensions.
     */
    @com.google.api.client.util.Key
    private java.lang.Boolean pad;

    /** A boolean specifying whether the resulting image should be padded up to the requested dimensions.
   [default: false]
     */
    public java.lang.Boolean getPad() {
      return pad;
    }

    /**
     * A boolean specifying whether the resulting image should be padded up to the requested
     * dimensions.
     */
    public Image setPad(java.lang.Boolean pad) {
      this.pad = pad;
      return this;
    }

    /**
     * Convenience method that returns only {@link Boolean#TRUE} or {@link Boolean#FALSE}.
     *
     * <p>
     * Boolean properties can have four possible values:
     * {@code null}, {@link com.google.api.client.util.Data#NULL_BOOLEAN}, {@link Boolean#TRUE}
     * or {@link Boolean#FALSE}.
     * </p>
     *
     * <p>
     * This method returns {@link Boolean#TRUE} if the default of the property is {@link Boolean#TRUE}
     * and it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
     * {@link Boolean#FALSE} is returned if the default of the property is {@link Boolean#FALSE} and
     * it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
     * </p>
     *
     * <p>
     * A boolean specifying whether the resulting image should be padded up to the requested dimensions.
     * </p>
     */
    public boolean isPad() {
      if (pad == null || pad == com.google.api.client.util.Data.NULL_BOOLEAN) {
        return false;
      }
      return pad;
    }

    /** Method used to scale or crop image. */
    @com.google.api.client.util.Key
    private java.lang.String mode;

    /** Method used to scale or crop image. [default: fit]
     */
    public java.lang.String getMode() {
      return mode;
    }

    /** Method used to scale or crop image. */
    public Image setMode(java.lang.String mode) {
      this.mode = mode;
      return this;
    }

    @Override
    public Image set(String parameterName, Object value) {
      return (Image) super.set(parameterName, value);
    }
  }
  
  /**
   * Performs MQL Queries.
   *
   * Create a request for the method "mqlread".
   *
   * This request holds the parameters needed by the freebase server.  After setting any optional
   * parameters, call the {@link Mqlread#execute()} method to invoke the remote operation.
   *
   * @param query An envelope containing a single MQL query.
   * @return the request
   */
  public Mqlread mqlread(java.lang.String query) throws java.io.IOException {
    Mqlread result = new Mqlread(query);
    initialize(result);
    return result;
  }

  public class Mqlread extends FreebaseRequest<GenericJson> {

    private static final String REST_PATH = "mqlread";

    private final java.util.regex.Pattern CALLBACK_PATTERN =
        java.util.regex.Pattern.compile("([A-Za-z0-9_$.]|\\[|\\])+");

    /**
     * Performs MQL Queries.
     *
     * Create a request for the method "mqlread".
     *
     * This request holds the parameters needed by the the freebase server.  After setting any
     * optional parameters, call the {@link Mqlread#execute()} method to invoke the remote operation.
     * <p> {@link
     * Mqlread#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param query An envelope containing a single MQL query.
     * @since 1.13
     */
    protected Mqlread(java.lang.String query) {
      super(Freebase.this, "GET", REST_PATH, null, GenericJson.class);
      this.query = com.google.api.client.util.Preconditions.checkNotNull(query, "Required parameter query must be specified.");
      initializeMediaDownload();
    }

    @Override
    public void executeMediaAndDownloadTo(java.io.OutputStream outputStream) throws java.io.IOException {
      super.executeMediaAndDownloadTo(outputStream);
    }

    @Override
    public java.io.InputStream executeMediaAsInputStream() throws java.io.IOException {
      return super.executeMediaAsInputStream();
    }

    @Override
    public com.google.api.client.http.HttpResponse executeMedia() throws java.io.IOException {
      return super.executeMedia();
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Mqlread setAlt(java.lang.String alt) {
      return (Mqlread) super.setAlt(alt);
    }

    @Override
    public Mqlread setFields(java.lang.String fields) {
      return (Mqlread) super.setFields(fields);
    }

    @Override
    public Mqlread setKey(java.lang.String key) {
      return (Mqlread) super.setKey(key);
    }

    @Override
    public Mqlread setOauthToken(java.lang.String oauthToken) {
      return (Mqlread) super.setOauthToken(oauthToken);
    }

    @Override
    public Mqlread setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Mqlread) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Mqlread setQuotaUser(java.lang.String quotaUser) {
      return (Mqlread) super.setQuotaUser(quotaUser);
    }

    @Override
    public Mqlread setUserIp(java.lang.String userIp) {
      return (Mqlread) super.setUserIp(userIp);
    }

    /** An envelope containing a single MQL query. */
    @com.google.api.client.util.Key
    private java.lang.String query;

    /** An envelope containing a single MQL query.
     */
    public java.lang.String getQuery() {
      return query;
    }

    /** An envelope containing a single MQL query. */
    public Mqlread setQuery(java.lang.String query) {
      this.query = query;
      return this;
    }

    /** The language of the results - an id of a /type/lang object. */
    @com.google.api.client.util.Key
    private java.lang.String lang;

    /** The language of the results - an id of a /type/lang object. [default: /lang/en]
     */
    public java.lang.String getLang() {
      return lang;
    }

    /** The language of the results - an id of a /type/lang object. */
    public Mqlread setLang(java.lang.String lang) {
      this.lang = lang;
      return this;
    }

    /** Whether or not to escape entities. */
    @com.google.api.client.util.Key("html_escape")
    private java.lang.Boolean htmlEscape;

    /** Whether or not to escape entities. [default: true]
     */
    public java.lang.Boolean getHtmlEscape() {
      return htmlEscape;
    }

    /** Whether or not to escape entities. */
    public Mqlread setHtmlEscape(java.lang.Boolean htmlEscape) {
      this.htmlEscape = htmlEscape;
      return this;
    }

    /**
     * Convenience method that returns only {@link Boolean#TRUE} or {@link Boolean#FALSE}.
     *
     * <p>
     * Boolean properties can have four possible values:
     * {@code null}, {@link com.google.api.client.util.Data#NULL_BOOLEAN}, {@link Boolean#TRUE}
     * or {@link Boolean#FALSE}.
     * </p>
     *
     * <p>
     * This method returns {@link Boolean#TRUE} if the default of the property is {@link Boolean#TRUE}
     * and it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
     * {@link Boolean#FALSE} is returned if the default of the property is {@link Boolean#FALSE} and
     * it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
     * </p>
     *
     * <p>
     * Whether or not to escape entities.
     * </p>
     */
    public boolean isHtmlEscape() {
      if (htmlEscape == null || htmlEscape == com.google.api.client.util.Data.NULL_BOOLEAN) {
        return true;
      }
      return htmlEscape;
    }

    /** How many spaces to indent the json. */
    @com.google.api.client.util.Key
    private java.lang.Long indent;

    /** How many spaces to indent the json. [default: 0]

   [maximum: 10]
     */
    public java.lang.Long getIndent() {
      return indent;
    }

    /** How many spaces to indent the json. */
    public Mqlread setIndent(java.lang.Long indent) {
      this.indent = indent;
      return this;
    }

    /** How MQL responds to uniqueness failures. */
    @com.google.api.client.util.Key("uniqueness_failure")
    private java.lang.String uniquenessFailure;

    /** How MQL responds to uniqueness failures. [default: hard]
     */
    public java.lang.String getUniquenessFailure() {
      return uniquenessFailure;
    }

    /** How MQL responds to uniqueness failures. */
    public Mqlread setUniquenessFailure(java.lang.String uniquenessFailure) {
      this.uniquenessFailure = uniquenessFailure;
      return this;
    }

    /** The dateline that you get in a mqlwrite response to ensure consistent results. */
    @com.google.api.client.util.Key
    private java.lang.String dateline;

    /** The dateline that you get in a mqlwrite response to ensure consistent results.
     */
    public java.lang.String getDateline() {
      return dateline;
    }

    /** The dateline that you get in a mqlwrite response to ensure consistent results. */
    public Mqlread setDateline(java.lang.String dateline) {
      this.dateline = dateline;
      return this;
    }

    /** The mql cursor. */
    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /** The mql cursor.
     */
    public java.lang.String getCursor() {
      return cursor;
    }

    /** The mql cursor. */
    public Mqlread setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    /** JS method name for JSONP callbacks. */
    @com.google.api.client.util.Key
    private java.lang.String callback;

    /** JS method name for JSONP callbacks.
     */
    public java.lang.String getCallback() {
      return callback;
    }

    /** JS method name for JSONP callbacks. */
    public Mqlread setCallback(java.lang.String callback) {
      if (!getSuppressPatternChecks()) {
        com.google.api.client.util.Preconditions.checkArgument(CALLBACK_PATTERN.matcher(callback).matches(),
            "Parameter callback must conform to the pattern " +
            "([A-Za-z0-9_$.]|\\[|\\])+");
      }
      this.callback = callback;
      return this;
    }

    /** Show the costs or not. */
    @com.google.api.client.util.Key
    private java.lang.Boolean cost;

    /** Show the costs or not. [default: false]
     */
    public java.lang.Boolean getCost() {
      return cost;
    }

    /** Show the costs or not. */
    public Mqlread setCost(java.lang.Boolean cost) {
      this.cost = cost;
      return this;
    }

    /**
     * Convenience method that returns only {@link Boolean#TRUE} or {@link Boolean#FALSE}.
     *
     * <p>
     * Boolean properties can have four possible values:
     * {@code null}, {@link com.google.api.client.util.Data#NULL_BOOLEAN}, {@link Boolean#TRUE}
     * or {@link Boolean#FALSE}.
     * </p>
     *
     * <p>
     * This method returns {@link Boolean#TRUE} if the default of the property is {@link Boolean#TRUE}
     * and it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
     * {@link Boolean#FALSE} is returned if the default of the property is {@link Boolean#FALSE} and
     * it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
     * </p>
     *
     * <p>
     * Show the costs or not.
     * </p>
     */
    public boolean isCost() {
      if (cost == null || cost == com.google.api.client.util.Data.NULL_BOOLEAN) {
        return false;
      }
      return cost;
    }

    /** Run the query as it would've been run at the specified point in time. */
    @com.google.api.client.util.Key("as_of_time")
    private java.lang.String asOfTime;

    /** Run the query as it would've been run at the specified point in time.
     */
    public java.lang.String getAsOfTime() {
      return asOfTime;
    }

    /** Run the query as it would've been run at the specified point in time. */
    public Mqlread setAsOfTime(java.lang.String asOfTime) {
      this.asOfTime = asOfTime;
      return this;
    }

    @Override
    public Mqlread set(String parameterName, Object value) {
      return (Mqlread) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Freebase}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Freebase}. */
    @Override
    public Freebase build() {
      return new Freebase(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link FreebaseRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setFreebaseRequestInitializer(
        FreebaseRequestInitializer freebaseRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(freebaseRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
